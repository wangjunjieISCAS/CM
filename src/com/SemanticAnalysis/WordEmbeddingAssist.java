package com.SemanticAnalysis;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class WordEmbeddingAssist {

	public WordEmbeddingAssist() {
		// TODO Auto-generated constructor stub
	}
	
	/*
	 * preprocess the word embedding generated by python
	 */
	public void processingWordEmbedding ( ){
		try {
			ArrayList<String> termList = new ArrayList<String>();
			BufferedReader termReader = new BufferedReader(new InputStreamReader(new FileInputStream(new File("data/input/wordEmbedding/termList.txt")), "utf-8"));
			//BufferedReader termReader = new BufferedReader ( new FileReader ( new File ( "data/input/wordEmbedding/termList.txt")));
			String line = "";
			while ( (line = termReader.readLine()) != null ){
				line = line.trim();
				termList.add( line );
			}
			termReader.close();
			
			ArrayList<ArrayList<Double>> embList = new ArrayList<ArrayList<Double>>();
			BufferedReader embReader = new BufferedReader( new FileReader ( new File ( "data/input/wordEmbedding/embList.txt")));
			while ( ( line = embReader.readLine()) != null ){
				line = line.trim();
				String[] valueList = line.split( " ");
				ArrayList<Double> embValues = new ArrayList<Double>();
				for ( int i =0; i < valueList.length; i++ ){
					Double value = Double.parseDouble(valueList[i]);
					embValues.add( value );
				}
				embList.add( embValues );
			}
			embReader.close();
			
			if ( termList.size() != embList.size() ){
				System.out.println( "TermList size is not equal with EmbList size!");
				return;
			}
			//BufferedWriter writer = new BufferedWriter ( new FileWriter ( new File ( "data/input/wordEmbedding/termEmbList.txt")));
			BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(new File("data/input/wordEmbedding/termEmbList.txt")), "utf-8"));
			for ( int i =0; i < termList.size(); i++ ){
				writer.write( termList.get(i ) + ":");
				System.out.println( termList.get(  i));
				ArrayList<Double> embValues = embList.get( i);
				for ( int j =0; j < embValues.size(); j++ ){
					writer.write( embValues.get( j ) + " ");
				}
				writer.newLine();
			}
			writer.flush();
			writer.close();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}		
	}
	
	public static void main ( String args[] ){
		WordEmbeddingAssist embTool = new WordEmbeddingAssist();
		embTool.processingWordEmbedding();
	}
}
